#!/usr/local/bin/python
# -*- coding: utf-8 -*-
# Copyright (c) 2017 Mikhail Shilov
# V 0.1.0.
# Описание: Калькулятор ROI для PoW майнинга DASH с прогнозом хэшрейта сети и сокращения вознаграждений
# Для того чтобы выбрать свою дату начала майнинга вам нужно поменять переменную start_time

# дата начала майнинга
start_time = "10-10-2017 00:00:00"   # формат день-месяц-год час:минута:секунда

# по умолчанию калькулятор настроен на 10 асиков A5 DashMaster 
# но вы можете изменить настройки по своему усмотрению. 
# менять параметры можно только в этом блоке
# -------------------------------------------------------
count_asic = 10                     # количество асиков 
hash_rate_one_asic = 30.20          # хэшрейт одного асика GH/s: 
price_asic = 9999                   # цена одного асика USD
pvn = 21                            # налог на растаможку асиков % (pvn) (если не хотим учитывать , то заменяем на 0 )
rate_coin = 176.35                  # курс монеты USD
power_cons_one_asic = 0.75          # потребляемая мощность одного асика KW/h 
сost_per_power = 0.15               # Стоимость кВт*ч  USD 
period_mining  =  8                 # период прогноза в месяцах. В среднем асики живут 6-8 месяцев. 
#-------------------------------------------------------
count_asic_prod_market_month =    300  # предполагаемое количество  выпущенных на рынок асиков в месяц.
count_month_asic_sale = 5             # сколько месяцев подряд будут выпущены асики
#-------------------------------------------------------
switch_predict_hash_rate = False       # прогнозируемый рост хэшрейта сети (True - отключен, False - включен)
actual_hash_rate =  2156069959920      # текущий хэшрейт сети (усрененный за последние цать блоков)
#--------------------------------------------------------
# Внимание! расчет с учетом  прогнозируемого роста хэшрейта сети  возможен только до 1 января 2019 года
# В противном случае вам нужно обновить прогнозируемый хэшрейт.

# Дальше код лучше не трогать.

cost_power_day = power_cons_one_asic * count_asic * сost_per_power * 24  # затраты на электричество в день
# цена всех асиков вместе с растаможкой
priсe_all_asic_pvn = price_asic * count_asic + (price_asic * count_asic / 100) * pvn
# сумарный хэшрейт всех  асиков  H/s
hash_rate_all_asic = hash_rate_one_asic * count_asic * 1000000000
# сумарный хэшрейт всех выпущенных асиков в месяц
hash_rate_asic_prod_market_month = count_asic_prod_market_month * hash_rate_one_asic * 1000000000

from datetime import datetime, timedelta
time_frmt = "%d-%m-%Y %H:%M:%S"         # формат времени мне понятный 
predict_time_frmt = "%Y-%m-%d %H:%M:%S" # формат времени c jupyter notebook 

# прогнозируемый хэшрейт без учета выпуска асиков
# jupyter notebook с кодом здесь https://goo.gl/5UfKQ9

time = ["2017-07-29 14:04:00", "2017-07-30 14:04:00", "2017-07-31 14:04:00", "2017-08-01 14:04:00", "2017-08-02 14:04:00", "2017-08-03 14:04:00", "2017-08-04 14:04:00", "2017-08-05 14:04:00", "2017-08-06 14:04:00", "2017-08-07 14:04:00", "2017-08-08 14:04:00", "2017-08-09 14:04:00", "2017-08-10 14:04:00", "2017-08-11 14:04:00", "2017-08-12 14:04:00", "2017-08-13 14:04:00", "2017-08-14 14:04:00", "2017-08-15 14:04:00", "2017-08-16 14:04:00", "2017-08-17 14:04:00", "2017-08-18 14:04:00", "2017-08-19 14:04:00", "2017-08-20 14:04:00", "2017-08-21 14:04:00", "2017-08-22 14:04:00", "2017-08-23 14:04:00", "2017-08-24 14:04:00", "2017-08-25 14:04:00", "2017-08-26 14:04:00", "2017-08-27 14:04:00", "2017-08-28 14:04:00", "2017-08-29 14:04:00", "2017-08-30 14:04:00", "2017-08-31 14:04:00", "2017-09-01 14:04:00", "2017-09-02 14:04:00", "2017-09-03 14:04:00", "2017-09-04 14:04:00", "2017-09-05 14:04:00", "2017-09-06 14:04:00", "2017-09-07 14:04:00", "2017-09-08 14:04:00", "2017-09-09 14:04:00", "2017-09-10 14:04:00", "2017-09-11 14:04:00", "2017-09-12 14:04:00", "2017-09-13 14:04:00", "2017-09-14 14:04:00", "2017-09-15 14:04:00", "2017-09-16 14:04:00", "2017-09-17 14:04:00", "2017-09-18 14:04:00", "2017-09-19 14:04:00", "2017-09-20 14:04:00", "2017-09-21 14:04:00", "2017-09-22 14:04:00", "2017-09-23 14:04:00", "2017-09-24 14:04:00", "2017-09-25 14:04:00", "2017-09-26 14:04:00", "2017-09-27 14:04:00", "2017-09-28 14:04:00", "2017-09-29 14:04:00", "2017-09-30 14:04:00", "2017-10-01 14:04:00", "2017-10-02 14:04:00", "2017-10-03 14:04:00", "2017-10-04 14:04:00", "2017-10-05 14:04:00", "2017-10-06 14:04:00", "2017-10-07 14:04:00", "2017-10-08 14:04:00", "2017-10-09 14:04:00", "2017-10-10 14:04:00", "2017-10-11 14:04:00", "2017-10-12 14:04:00", "2017-10-13 14:04:00", "2017-10-14 14:04:00", "2017-10-15 14:04:00", "2017-10-16 14:04:00", "2017-10-17 14:04:00", "2017-10-18 14:04:00", "2017-10-19 14:04:00", "2017-10-20 14:04:00", "2017-10-21 14:04:00", "2017-10-22 14:04:00", "2017-10-23 14:04:00", "2017-10-24 14:04:00", "2017-10-25 14:04:00", "2017-10-26 14:04:00", "2017-10-27 14:04:00", "2017-10-28 14:04:00", "2017-10-29 14:04:00", "2017-10-30 14:04:00", "2017-10-31 14:04:00", "2017-11-01 14:04:00", "2017-11-02 14:04:00", "2017-11-03 14:04:00", "2017-11-04 14:04:00", "2017-11-05 14:04:00", "2017-11-06 14:04:00", "2017-11-07 14:04:00", "2017-11-08 14:04:00", "2017-11-09 14:04:00", "2017-11-10 14:04:00", "2017-11-11 14:04:00", "2017-11-12 14:04:00", "2017-11-13 14:04:00", "2017-11-14 14:04:00", "2017-11-15 14:04:00", "2017-11-16 14:04:00", "2017-11-17 14:04:00", "2017-11-18 14:04:00", "2017-11-19 14:04:00", "2017-11-20 14:04:00", "2017-11-21 14:04:00", "2017-11-22 14:04:00", "2017-11-23 14:04:00", "2017-11-24 14:04:00", "2017-11-25 14:04:00", "2017-11-26 14:04:00", "2017-11-27 14:04:00", "2017-11-28 14:04:00", "2017-11-29 14:04:00", "2017-11-30 14:04:00", "2017-12-01 14:04:00", "2017-12-02 14:04:00", "2017-12-03 14:04:00", "2017-12-04 14:04:00", "2017-12-05 14:04:00", "2017-12-06 14:04:00", "2017-12-07 14:04:00", "2017-12-08 14:04:00", "2017-12-09 14:04:00", "2017-12-10 14:04:00", "2017-12-11 14:04:00", "2017-12-12 14:04:00", "2017-12-13 14:04:00", "2017-12-14 14:04:00", "2017-12-15 14:04:00", "2017-12-16 14:04:00", "2017-12-17 14:04:00", "2017-12-18 14:04:00", "2017-12-19 14:04:00", "2017-12-20 14:04:00", "2017-12-21 14:04:00", "2017-12-22 14:04:00", "2017-12-23 14:04:00", "2017-12-24 14:04:00", "2017-12-25 14:04:00", "2017-12-26 14:04:00", "2017-12-27 14:04:00", "2017-12-28 14:04:00", "2017-12-29 14:04:00", "2017-12-30 14:04:00", "2017-12-31 14:04:00", "2018-01-01 14:04:00", "2018-01-02 14:04:00", "2018-01-03 14:04:00", "2018-01-04 14:04:00", "2018-01-05 14:04:00", "2018-01-06 14:04:00", "2018-01-07 14:04:00", "2018-01-08 14:04:00", "2018-01-09 14:04:00", "2018-01-10 14:04:00", "2018-01-11 14:04:00", "2018-01-12 14:04:00", "2018-01-13 14:04:00", "2018-01-14 14:04:00", "2018-01-15 14:04:00", "2018-01-16 14:04:00", "2018-01-17 14:04:00", "2018-01-18 14:04:00", "2018-01-19 14:04:00", "2018-01-20 14:04:00", "2018-01-21 14:04:00", "2018-01-22 14:04:00", "2018-01-23 14:04:00", "2018-01-24 14:04:00", "2018-01-25 14:04:00", "2018-01-26 14:04:00", "2018-01-27 14:04:00", "2018-01-28 14:04:00", "2018-01-29 14:04:00", "2018-01-30 14:04:00", "2018-01-31 14:04:00", "2018-02-01 14:04:00", "2018-02-02 14:04:00", "2018-02-03 14:04:00", "2018-02-04 14:04:00", "2018-02-05 14:04:00", "2018-02-06 14:04:00", "2018-02-07 14:04:00", "2018-02-08 14:04:00", "2018-02-09 14:04:00", "2018-02-10 14:04:00", "2018-02-11 14:04:00", "2018-02-12 14:04:00", "2018-02-13 14:04:00", "2018-02-14 14:04:00", "2018-02-15 14:04:00", "2018-02-16 14:04:00", "2018-02-17 14:04:00", "2018-02-18 14:04:00", "2018-02-19 14:04:00", "2018-02-20 14:04:00", "2018-02-21 14:04:00", "2018-02-22 14:04:00", "2018-02-23 14:04:00", "2018-02-24 14:04:00", "2018-02-25 14:04:00", "2018-02-26 14:04:00", "2018-02-27 14:04:00", "2018-02-28 14:04:00", "2018-03-01 14:04:00", "2018-03-02 14:04:00", "2018-03-03 14:04:00", "2018-03-04 14:04:00", "2018-03-05 14:04:00", "2018-03-06 14:04:00", "2018-03-07 14:04:00", "2018-03-08 14:04:00", "2018-03-09 14:04:00", "2018-03-10 14:04:00", "2018-03-11 14:04:00", "2018-03-12 14:04:00", "2018-03-13 14:04:00", "2018-03-14 14:04:00", "2018-03-15 14:04:00", "2018-03-16 14:04:00", "2018-03-17 14:04:00", "2018-03-18 14:04:00", "2018-03-19 14:04:00", "2018-03-20 14:04:00", "2018-03-21 14:04:00", "2018-03-22 14:04:00", "2018-03-23 14:04:00", "2018-03-24 14:04:00", "2018-03-25 14:04:00", "2018-03-26 14:04:00", "2018-03-27 14:04:00", "2018-03-28 14:04:00", "2018-03-29 14:04:00", "2018-03-30 14:04:00", "2018-03-31 14:04:00", "2018-04-01 14:04:00", "2018-04-02 14:04:00", "2018-04-03 14:04:00", "2018-04-04 14:04:00", "2018-04-05 14:04:00", "2018-04-06 14:04:00", "2018-04-07 14:04:00", "2018-04-08 14:04:00", "2018-04-09 14:04:00", "2018-04-10 14:04:00", "2018-04-11 14:04:00", "2018-04-12 14:04:00", "2018-04-13 14:04:00", "2018-04-14 14:04:00", "2018-04-15 14:04:00", "2018-04-16 14:04:00", "2018-04-17 14:04:00", "2018-04-18 14:04:00", "2018-04-19 14:04:00", "2018-04-20 14:04:00", "2018-04-21 14:04:00", "2018-04-22 14:04:00", "2018-04-23 14:04:00", "2018-04-24 14:04:00", "2018-04-25 14:04:00", "2018-04-26 14:04:00", "2018-04-27 14:04:00", "2018-04-28 14:04:00", "2018-04-29 14:04:00", "2018-04-30 14:04:00", "2018-05-01 14:04:00", "2018-05-02 14:04:00", "2018-05-03 14:04:00", "2018-05-04 14:04:00", "2018-05-05 14:04:00", "2018-05-06 14:04:00", "2018-05-07 14:04:00", "2018-05-08 14:04:00", "2018-05-09 14:04:00", "2018-05-10 14:04:00", "2018-05-11 14:04:00", "2018-05-12 14:04:00", "2018-05-13 14:04:00", "2018-05-14 14:04:00", "2018-05-15 14:04:00", "2018-05-16 14:04:00", "2018-05-17 14:04:00", "2018-05-18 14:04:00", "2018-05-19 14:04:00", "2018-05-20 14:04:00", "2018-05-21 14:04:00", "2018-05-22 14:04:00", "2018-05-23 14:04:00", "2018-05-24 14:04:00", "2018-05-25 14:04:00", "2018-05-26 14:04:00", "2018-05-27 14:04:00", "2018-05-28 14:04:00", "2018-05-29 14:04:00", "2018-05-30 14:04:00", "2018-05-31 14:04:00", "2018-06-01 14:04:00", "2018-06-02 14:04:00", "2018-06-03 14:04:00", "2018-06-04 14:04:00", "2018-06-05 14:04:00", "2018-06-06 14:04:00", "2018-06-07 14:04:00", "2018-06-08 14:04:00", "2018-06-09 14:04:00", "2018-06-10 14:04:00", "2018-06-11 14:04:00", "2018-06-12 14:04:00", "2018-06-13 14:04:00", "2018-06-14 14:04:00", "2018-06-15 14:04:00", "2018-06-16 14:04:00", "2018-06-17 14:04:00", "2018-06-18 14:04:00", "2018-06-19 14:04:00", "2018-06-20 14:04:00", "2018-06-21 14:04:00", "2018-06-22 14:04:00", "2018-06-23 14:04:00", "2018-06-24 14:04:00", "2018-06-25 14:04:00", "2018-06-26 14:04:00", "2018-06-27 14:04:00", "2018-06-28 14:04:00", "2018-06-29 14:04:00", "2018-06-30 14:04:00", "2018-07-01 14:04:00", "2018-07-02 14:04:00", "2018-07-03 14:04:00", "2018-07-04 14:04:00", "2018-07-05 14:04:00", "2018-07-06 14:04:00", "2018-07-07 14:04:00", "2018-07-08 14:04:00", "2018-07-09 14:04:00", "2018-07-10 14:04:00", "2018-07-11 14:04:00", "2018-07-12 14:04:00", "2018-07-13 14:04:00", "2018-07-14 14:04:00", "2018-07-15 14:04:00", "2018-07-16 14:04:00", "2018-07-17 14:04:00", "2018-07-18 14:04:00", "2018-07-19 14:04:00", "2018-07-20 14:04:00", "2018-07-21 14:04:00", "2018-07-22 14:04:00", "2018-07-23 14:04:00", "2018-07-24 14:04:00", "2018-07-25 14:04:00", "2018-07-26 14:04:00", "2018-07-27 14:04:00", "2018-07-28 14:04:00", "2018-07-29 14:04:00", "2018-07-30 14:04:00", "2018-07-31 14:04:00", "2018-08-01 14:04:00", "2018-08-02 14:04:00", "2018-08-03 14:04:00", "2018-08-04 14:04:00", "2018-08-05 14:04:00", "2018-08-06 14:04:00", "2018-08-07 14:04:00", "2018-08-08 14:04:00", "2018-08-09 14:04:00", "2018-08-10 14:04:00", "2018-08-11 14:04:00", "2018-08-12 14:04:00", "2018-08-13 14:04:00", "2018-08-14 14:04:00", "2018-08-15 14:04:00", "2018-08-16 14:04:00", "2018-08-17 14:04:00", "2018-08-18 14:04:00", "2018-08-19 14:04:00", "2018-08-20 14:04:00", "2018-08-21 14:04:00", "2018-08-22 14:04:00", "2018-08-23 14:04:00", "2018-08-24 14:04:00", "2018-08-25 14:04:00", "2018-08-26 14:04:00", "2018-08-27 14:04:00", "2018-08-28 14:04:00", "2018-08-29 14:04:00", "2018-08-30 14:04:00", "2018-08-31 14:04:00", "2018-09-01 14:04:00", "2018-09-02 14:04:00", "2018-09-03 14:04:00", "2018-09-04 14:04:00", "2018-09-05 14:04:00", "2018-09-06 14:04:00", "2018-09-07 14:04:00", "2018-09-08 14:04:00", "2018-09-09 14:04:00", "2018-09-10 14:04:00", "2018-09-11 14:04:00", "2018-09-12 14:04:00", "2018-09-13 14:04:00", "2018-09-14 14:04:00", "2018-09-15 14:04:00", "2018-09-16 14:04:00", "2018-09-17 14:04:00", "2018-09-18 14:04:00", "2018-09-19 14:04:00", "2018-09-20 14:04:00", "2018-09-21 14:04:00", "2018-09-22 14:04:00", "2018-09-23 14:04:00", "2018-09-24 14:04:00", "2018-09-25 14:04:00", "2018-09-26 14:04:00", "2018-09-27 14:04:00", "2018-09-28 14:04:00", "2018-09-29 14:04:00", "2018-09-30 14:04:00", "2018-10-01 14:04:00", "2018-10-02 14:04:00", "2018-10-03 14:04:00", "2018-10-04 14:04:00", "2018-10-05 14:04:00", "2018-10-06 14:04:00", "2018-10-07 14:04:00", "2018-10-08 14:04:00", "2018-10-09 14:04:00", "2018-10-10 14:04:00", "2018-10-11 14:04:00", "2018-10-12 14:04:00", "2018-10-13 14:04:00", "2018-10-14 14:04:00", "2018-10-15 14:04:00", "2018-10-16 14:04:00", "2018-10-17 14:04:00", "2018-10-18 14:04:00", "2018-10-19 14:04:00", "2018-10-20 14:04:00", "2018-10-21 14:04:00", "2018-10-22 14:04:00", "2018-10-23 14:04:00", "2018-10-24 14:04:00", "2018-10-25 14:04:00", "2018-10-26 14:04:00", "2018-10-27 14:04:00", "2018-10-28 14:04:00", "2018-10-29 14:04:00", "2018-10-30 14:04:00", "2018-10-31 14:04:00", "2018-11-01 14:04:00", "2018-11-02 14:04:00", "2018-11-03 14:04:00", "2018-11-04 14:04:00", "2018-11-05 14:04:00", "2018-11-06 14:04:00", "2018-11-07 14:04:00", "2018-11-08 14:04:00", "2018-11-09 14:04:00", "2018-11-10 14:04:00", "2018-11-11 14:04:00", "2018-11-12 14:04:00", "2018-11-13 14:04:00", "2018-11-14 14:04:00", "2018-11-15 14:04:00", "2018-11-16 14:04:00", "2018-11-17 14:04:00", "2018-11-18 14:04:00", "2018-11-19 14:04:00", "2018-11-20 14:04:00", "2018-11-21 14:04:00", "2018-11-22 14:04:00", "2018-11-23 14:04:00", "2018-11-24 14:04:00", "2018-11-25 14:04:00", "2018-11-26 14:04:00", "2018-11-27 14:04:00", "2018-11-28 14:04:00", "2018-11-29 14:04:00", "2018-11-30 14:04:00", "2018-12-01 14:04:00", "2018-12-02 14:04:00", "2018-12-03 14:04:00", "2018-12-04 14:04:00", "2018-12-05 14:04:00", "2018-12-06 14:04:00", "2018-12-07 14:04:00", "2018-12-08 14:04:00", "2018-12-09 14:04:00", "2018-12-10 14:04:00", "2018-12-11 14:04:00", "2018-12-12 14:04:00", "2018-12-13 14:04:00", "2018-12-14 14:04:00", "2018-12-15 14:04:00", "2018-12-16 14:04:00", "2018-12-17 14:04:00", "2018-12-18 14:04:00", "2018-12-19 14:04:00", "2018-12-20 14:04:00", "2018-12-21 14:04:00", "2018-12-22 14:04:00", "2018-12-23 14:04:00", "2018-12-24 14:04:00", "2018-12-25 14:04:00", "2018-12-26 14:04:00", "2018-12-27 14:04:00", "2018-12-28 14:04:00", "2018-12-29 14:04:00", "2018-12-30 14:04:00", "2018-12-31 14:04:00", "2019-01-01 14:04:00"]
hash_rate = [1.21273149799e+13, 1.22830839192e+13, 1.24271487667e+13, 1.25549713468e+13, 1.26892825705e+13, 1.28286556935e+13, 1.29757739905e+13, 1.31009738299e+13, 1.32468926095e+13, 1.33826961959e+13, 1.35037289302e+13, 1.36325702161e+13, 1.37676143283e+13, 1.39113451093e+13, 1.40338863231e+13, 1.41776569097e+13, 1.4311605571e+13, 1.44308675479e+13, 1.45578274187e+13, 1.46907043917e+13, 1.48318316188e+13, 1.49512101902e+13, 1.5091166972e+13, 1.5220590674e+13, 1.53345889932e+13, 1.54555506877e+13, 1.55817291066e+13, 1.57155187895e+13, 1.58270059064e+13, 1.59586218379e+13, 1.60793744362e+13, 1.6184499983e+13, 1.62965198759e+13, 1.64138187508e+13, 1.65389158326e+13, 1.66420104553e+13, 1.67656312114e+13, 1.68788634089e+13, 1.69769979737e+13, 1.70825859216e+13, 1.71940151725e+13, 1.73137815376e+13, 1.74120348252e+13, 1.75312295012e+13, 1.76403545308e+13, 1.7734585455e+13, 1.78363427231e+13, 1.79438729265e+13, 1.8059524618e+13, 1.8153299508e+13, 1.82675083062e+13, 1.83710056688e+13, 1.84588471394e+13, 1.85533519462e+13, 1.86526881558e+13, 1.87591517394e+13, 1.88427202338e+13, 1.89457101838e+13, 1.90370127656e+13, 1.91117504537e+13, 1.91923385914e+13, 1.92770683962e+13, 1.93683830119e+13, 1.94364273767e+13, 1.95237011989e+13, 1.95992895717e+13, 1.96585142347e+13, 1.97239895015e+13, 1.97941995499e+13, 1.98717688591e+13, 1.99270067276e+13, 2.00025553253e+13, 2.00676159606e+13, 2.01175966999e+13, 2.0175165472e+13, 2.02388254439e+13, 2.03111845106e+13, 2.03624998691e+13, 2.04353271349e+13, 2.04987486554e+13, 2.05480241056e+13, 2.0605647418e+13, 2.06699267273e+13, 2.07432590462e+13, 2.07956804971e+13, 2.08695213979e+13, 2.09336406905e+13, 2.09830826217e+13, 2.10401395583e+13, 2.11029374499e+13, 2.11737154993e+13, 2.12223807235e+13, 2.12911665835e+13, 2.13488700677e+13, 2.13905100682e+13, 2.14383908823e+13, 2.14906873336e+13, 2.15497230862e+13, 2.15855228728e+13, 2.16404678823e+13, 2.16835287852e+13, 2.17099193527e+13, 2.17421546358e+13, 2.17786303522e+13, 2.18218952149e+13, 2.18421970932e+13, 2.18821324227e+13, 2.19108735099e+13, 2.19238168463e+13, 2.19436365462e+13, 2.19688596857e+13, 2.20021353865e+13, 2.20137786239e+13, 2.20464182329e+13, 2.2069223795e+13, 2.20775545234e+13, 2.20940142392e+13, 2.21170291655e+13, 2.2149120306e+13, 2.21604512887e+13, 2.21934810286e+13, 2.22171957538e+13, 2.22267633637e+13, 2.22445940528e+13, 2.22689237642e+13, 2.23020920794e+13, 2.23140952662e+13, 2.23472436932e+13, 2.23703980239e+13, 2.23786270422e+13, 2.23942709506e+13, 2.24155266331e+13, 2.24447264455e+13, 2.24518912351e+13, 2.24793868062e+13, 2.24961582791e+13, 2.24973852522e+13, 2.25055416932e+13, 2.25189771517e+13, 2.25401909794e+13, 2.25393803912e+13, 2.25590917319e+13, 2.25684495424e+13, 2.256280649e+13, 2.25647982342e+13, 2.25729199647e+13, 2.25897964241e+13, 2.25857263677e+13, 2.2603330919e+13, 2.26117804924e+13, 2.26064434023e+13, 2.26099402585e+13, 2.26207208909e+13, 2.26413355971e+13, 2.26419816216e+13, 2.26651542621e+13, 2.26798771885e+13, 2.26813549919e+13, 2.26920319492e+13, 2.2710173617e+13, 2.27381429163e+13, 2.27459514813e+13, 2.27759155298e+13, 2.27968907132e+13, 2.28039288399e+13, 2.28193403481e+13, 2.28412790483e+13, 2.2872020718e+13, 2.28815162651e+13, 2.29120486807e+13, 2.29324682226e+13, 2.29378487313e+13, 2.29505489787e+13, 2.29687956197e+13, 2.29949593917e+13, 2.29991053606e+13, 2.30236465265e+13, 2.30375753356e+13, 2.30361161091e+13, 2.3041782405e+13, 2.3052955995e+13, 2.30721592136e+13, 2.30696015797e+13, 2.30878301004e+13, 2.30959578823e+13, 2.30893141316e+13, 2.30904996072e+13, 2.30979642453e+13, 2.3114278728e+13, 2.31096808941e+13, 2.31267263839e+13, 2.31345181087e+13, 2.31283575744e+13, 2.31308020641e+13, 2.31402443238e+13, 2.31591864435e+13, 2.31577887496e+13, 2.3178523009e+13, 2.3190404455e+13, 2.31886455782e+13, 2.31957156161e+13, 2.32099223146e+13, 2.32336876026e+13, 2.3237097949e+13, 2.32625586756e+13, 2.3279026719e+13, 2.32816647863e+13, 2.32929008484e+13, 2.33110095744e+13, 2.33383873849e+13, 2.33451019413e+13, 2.33735454054e+13, 2.33926660199e+13, 2.33976210253e+13, 2.34108349218e+13, 2.34305797444e+13, 2.34592490902e+13, 2.3466906768e+13, 2.34959394497e+13, 2.35152879081e+13, 2.35200998773e+13, 2.35327885544e+13, 2.35516134054e+13, 2.35789549958e+13, 2.35848646854e+13, 2.36117185231e+13, 2.36284498729e+13, 2.3630203746e+13, 2.3639396788e+13, 2.36542995136e+13, 2.3677312434e+13, 2.36785168481e+13, 2.37003295627e+13, 2.37117360171e+13, 2.37079447338e+13, 2.37114470094e+13, 2.37205984114e+13, 2.37378937203e+13, 2.37335160938e+13, 2.37499897432e+13, 2.37564106392e+13, 2.37480982242e+13, 2.37476521167e+13, 2.37535304586e+13, 2.37683216367e+13, 2.37622902581e+13, 2.3778026777e+13, 2.37846753939e+13, 2.37775833133e+13, 2.37793554415e+13, 2.37884312666e+13, 2.38073557281e+13, 2.38063250182e+13, 2.38278367539e+13, 2.38409191658e+13, 2.38407823892e+13, 2.38498759174e+13, 2.38664689155e+13, 2.38929251341e+13, 2.38992532766e+13, 2.39277621518e+13, 2.39472951318e+13, 2.39528868628e+13, 2.39668261409e+13, 2.39872414942e+13, 2.40163810557e+13, 2.40241674274e+13, 2.40528567182e+13, 2.40712761454e+13, 2.40744830258e+13, 2.40848289714e+13, 2.41005457583e+13, 2.41240244033e+13, 2.41253681303e+13, 2.41470484208e+13, 2.41581385789e+13, 2.41539677095e+13, 2.41571790267e+13, 2.41663090882e+13, 2.41840596453e+13, 2.41808429634e+13, 2.41994299989e+13, 2.42091760644e+13, 2.42056670907e+13, 2.42117706123e+13, 2.42262082763e+13, 2.42518217608e+13, 2.42591131338e+13, 2.42908891961e+13, 2.43164845724e+13, 2.43314067575e+13, 2.43583873122e+13, 2.4395956041e+13, 2.44467100274e+13, 2.44808585157e+13, 2.45408730981e+13, 2.45957178512e+13, 2.46405024761e+13, 2.46975424527e+13, 2.47649428279e+13, 2.48448772858e+13, 2.49071432383e+13, 2.4993822142e+13, 2.50735194265e+13, 2.51410268332e+13, 2.5218390935e+13, 2.53035042288e+13, 2.53983902485e+13, 2.54727632652e+13, 2.55686916416e+13, 2.56548391249e+13, 2.57261268222e+13, 2.58047996088e+13, 2.58890133945e+13, 2.5981114766e+13, 2.60511936879e+13, 2.61417384854e+13, 2.62218675834e+13, 2.62869809703e+13, 2.63598153856e+13, 2.64390199266e+13, 2.65274238733e+13, 2.6595577705e+13, 2.66863968171e+13, 2.67693826918e+13, 2.68402647541e+13, 2.69220471519e+13, 2.70135773661e+13, 2.71178086272e+13, 2.72053372486e+13, 2.73190444797e+13, 2.74283176838e+13, 2.75286940729e+13, 2.76429111962e+13, 2.77694809992e+13, 2.79109592959e+13, 2.80374915943e+13, 2.81914646689e+13, 2.8341738448e+13, 2.84833011872e+13, 2.86383318456e+13, 2.88047861939e+13, 2.89846782066e+13, 2.91476373894e+13, 2.93355711656e+13, 2.95169066304e+13, 2.96862544187e+13, 2.98654784029e+13, 3.00522875899e+13, 3.0248521647e+13, 3.04237106297e+13, 3.0619738001e+13, 3.08050812625e+13, 3.09744729971e+13, 3.11499661386e+13, 3.13295199732e+13, 3.15152784755e+13, 3.16771217545e+13, 3.18573199258e+13, 3.20247639777e+13, 3.21746166857e+13, 3.23293676556e+13, 3.24874092585e+13, 3.26513053112e+13, 3.27913335123e+13, 3.29501311649e+13, 3.30969189372e+13, 3.32271458733e+13, 3.33635398517e+13, 3.35046803356e+13, 3.36532653132e+13, 3.37796534383e+13, 3.39265108648e+13, 3.40630374537e+13, 3.41846154541e+13, 3.4313864715e+13, 3.44492211075e+13, 3.45932098637e+13, 3.47159946418e+13, 3.4860031596e+13, 3.49943029128e+13, 3.51139727003e+13, 3.52414490842e+13, 3.53749689964e+13, 3.55168771938e+13, 3.56371801693e+13, 3.57782041143e+13, 3.59088313091e+13, 3.60241577716e+13, 3.61465559974e+13, 3.62742592932e+13, 3.64096392855e+13, 3.65227573456e+13, 3.66560191962e+13, 3.67784072051e+13, 3.68851333501e+13, 3.69986968513e+13, 3.71174631502e+13, 3.72439359998e+13, 3.73483035838e+13, 3.74730881065e+13, 3.75873735188e+13, 3.76864545107e+13, 3.77928908914e+13, 3.7905084136e+13, 3.80255479362e+13, 3.81244537187e+13, 3.82442805835e+13, 3.83540443148e+13, 3.84489485454e+13, 3.85514421229e+13, 3.86597993566e+13, 3.87763948607e+13, 3.88712538159e+13, 3.89867069492e+13, 3.90916247188e+13, 3.91810736185e+13, 3.92773784836e+13, 3.93787073173e+13, 3.94873502022e+13, 3.95732729882e+13, 3.96787749418e+13, 3.97727247539e+13, 3.98502177554e+13, 3.99336381878e+13, 4.00212430397e+13, 4.01154390354e+13, 4.0186333519e+13, 4.02763884958e+13, 4.03546523301e+13, 4.04164120754e+13, 4.04842504242e+13, 4.05566239444e+13, 4.06361343567e+13, 40693073761585, 4.0770073249e+13, 4.08363295524e+13, 4.0887252873e+13, 4.09455200003e+13, 4.1009649512e+13, 4.10822709016e+13, 4.1133668613e+13, 4.12064304535e+13, 4.12696750612e+13, 4.13187015339e+13, 4.13760453005e+13, 4.1440056942e+13, 4.15131757145e+13, 4.15654786273e+13, 4.16393344108e+13, 4.17036368908e+13, 4.17534607121e+13, 4.18111233183e+13, 4.18747697251e+13, 4.19466516668e+13, 4.19966818149e+13, 4.20670922536e+13, 4.21266716044e+13, 4.21704236354e+13, 4.22206311817e+13, 4.22754418596e+13, 4.23371471297e+13, 4.23757354095e+13, 4.24335484553e+13, 4.24795154636e+13, 4.2508807817e+13, 4.25438984097e+13, 4.25831421675e+13, 4.2629049464e+13, 4.26518332955e+13, 4.26940595996e+13, 4.27248753414e+13, 4.27396574582e+13, 4.27610667625e+13, 4.27876235661e+13, 4.28219768644e+13, 4.28344480568e+13, 4.28676786818e+13, 4.28908568586e+13, 4.28993655656e+13, 4.2915836868e+13, 4.29387288429e+13, 4.29705969951e+13, 4.29816410705e+13, 4.30143566536e+13, 4.30377661211e+13, 4.30470719536e+13, 4.30647163673e+13, 4.30889638578e+13, 4.31221782883e+13, 4.31343752656e+13, 4.31678790327e+13, 4.31915583009e+13, 4.32004838866e+13, 4.32169919952e+13, 4.3239269645e+13, 4.32696337861e+13, 4.3278084808e+13, 4.33069636349e+13, 4.33251868384e+13, 4.33279026546e+13, 4.33375518063e+13, 4.33524496954e+13, 4.33750616235e+13, 4.33755518449e+13, 4.33964357894e+13, 4.34068100207e+13, 4.34020029713e+13, 4.3404630502e+13, 4.34131730057e+13, 4.34302458506e+13, 4.34261441073e+13, 4.344349101e+13, 4.34514648234e+13, 4.34454472366e+13, 4.34480773917e+13, 4.3457828303e+13, 4.3477277474e+13, 4.34766526423e+13, 4.34984820672e+13, 4.35118239714e+13, 4.35119181792e+13]
predict = zip(time, hash_rate)

time= None
hash_rate=None

# поиск хэшрейта по прогнозируемой дате
def get_hash_rate(find_time):
    for time, hash_rate in predict:
        if datetime.strptime(time, predict_time_frmt).date() == find_time.date():
            if switch_predict_hash_rate == True :
                return int(actual_hash_rate)  # если отключен прогнозируемый рост хэшрейта сети
            else:
                return int(hash_rate) # если включен 
            

# интервал сокращения вознаграждения в блоках (системная константа) см. здесь https://goo.gl/Eoa5Ui
CYCLE_LENGTH=210240

# точка отсчёта (блок 709971)   https://goo.gl/goQ8Ce


current_time = "27-07-2017 02:30:27" # время создания блока точки отсчета
average_block_time = 157.5233751     # среднее время на блок за 2016-2017 год  (см. тут http://i.imgur.com/64hZ677.png)
block_day = 86400/average_block_time # блоков в сутках 
current_haight_block = 709971        # высота блока точки отсчета



current_time = datetime.strptime(current_time, time_frmt)
start_time =   datetime.strptime(start_time, time_frmt)


diff_time = (start_time - current_time).total_seconds()                        # кол-во секунд  до старта 
height_block_start = int(current_haight_block + diff_time/average_block_time)  # высота блока на старте 

def block_subsidy_at(nHeight):
    nSubsidy = float(5)  # предполагаемое минимальное вознаграждение
    for i in range(CYCLE_LENGTH, nHeight, CYCLE_LENGTH):
        nSubsidy -= nSubsidy/14
    return nSubsidy*0.45

rwfmt =  "{:10,f}"
prev_reward = block_subsidy_at(height_block_start) 
prev_profit_day = 0 
count_day = 0   # счетчик дней
count_sales = 1 # счетчик распродаж асиков
stat=[]

# Шапка 

print("\n")
print("Дата начала майнинга:   " + str(start_time.strftime('%d-%m-%Y')))
print("\n")
print ("КАЛЬКУЛЯТОР ROI PoW DASH: ") 
lnfmt ="{:%d, %b %Y}  {:10d}     {:10,f}      {}   {:10.4f}      {:10,.2f}   {:10,.2f} {:10,.0f} "
print ("------------    ----------    ----------    ---------------    ----------    -----------    ----------    ----------")
print ("   дата           высота       награда          хэшрейт          монет        суммарный        ROI          месяцы  ")
print ("                  блока        за блок           сети            в сутки       доход $          %                   ")
print ("------------    ----------    ----------    ---------------    ----------    -----------    ----------    ----------")


for i in range (period_mining*30+1):
    #msg = " "
    time = start_time + timedelta(days=i)
    dtm = (time - start_time).total_seconds() 
    count_day += 1 # счетчик дней
    height_block = int(height_block_start + dtm/average_block_time)
    reward =  block_subsidy_at(height_block)
    #if reward != prev_reward:
       #msg = "STOP"
    hash_rate = get_hash_rate(time) 
    
    if hash_rate  is None: 
        break  # если прогнозируемый хэшрейт закончился 
    if (count_month_asic_sale == 0) or (count_asic_prod_market_month == 0):
        mined_day = hash_rate_all_asic / hash_rate * reward * block_day # если не учитываем количества  асиков в сети
    else:
        mined_day = hash_rate_all_asic / (hash_rate + (hash_rate_asic_prod_market_month - hash_rate_all_asic) ) * reward * block_day   
     
    profit_day =  prev_profit_day + (mined_day * rate_coin  - cost_power_day)
    roi = profit_day / priсe_all_asic_pvn * 100
    if count_day % 30 == 0:
        #собираем статистику по месяцам 
        month = [time, height_block, reward, hash_rate, mined_day, profit_day, roi, count_day/30 ]
        stat.append(month)
        if (count_asic_prod_market_month != 0) and (count_month_asic_sale != 0):
            if count_sales <= count_month_asic_sale:
                count_sales += 1 # счетчик ежемесячных распродаж асиков
                hash_rate_asic_prod_market_month += hash_rate_asic_prod_market_month  # добавляем хэшрейт выпущенных каждый месяц новых асиков
                

    #print (lnfmt.format(time, height_block, reward, hash_rate, mined_day, profit_day, roi, count_day/30 ))    
    prev_reward = reward
    prev_profit_day = profit_day
    
# вывод
print("")
for month in stat:
    print(lnfmt.format(*month))      
    

# Подвал
    
print("\n")    
print ("Автору на кофе и его любимой кошке на Вискас ;) ")
print("")
print("DASH: XaoYASf1vTAcX9A6yfozdR6VHRXL9px8Te ")
print("LTC:  MVvcx5edVFT7LVEm4tAAgejyEKkWx3HF9r ")
print("ZEC:  t1PczT66ehvV1GTpeEciRLfnanQHRPb2WWr")
print("BTC:  1Gkntjb7Qpbg1sCqnhcbetKEm2iAxnqXTW")
print("XMR:  42FmEhDss6vJvNbEDYMHGY9iHNhzQjpGm1frhWADDGdGXUfzdRcy4jCAzDBxcFwxt6jMG4fWp8Rv6H6UGDHwbrEUGPfSHtJ")
print("\n")  
